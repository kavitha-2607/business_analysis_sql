Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000



2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 10000
iii. Category = 10000
iv. Attribute = 10000
v. Review = 10000
vi. Checkin = 10000
vii. Photo = 10000
viii. Tip = 10000
ix. User = 10000
x. Friend = 10000
xi. Elite_years = 10000

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: NO


SQL code used to arrive at answer:
SELECT COUNT(*)
FROM user
WHERE id IS NULL OR
name IS NULL OR
review_count IS NULL OR
yelping_since IS NULL OR
useful IS NULL OR
funny  IS NULL OR
cool IS NULL OR
fans IS NULL OR
average_stars IS NULL OR
compliment_hot IS NULL OR
compliment_more IS NULL OR
compliment_profile IS NULL OR
compliment_cute IS NULL OR
compliment_list IS NULL OR
compliment_note IS NULL OR
compliment_plain IS NULL OR
compliment_cool IS NULL OR
compliment_funny IS NULL OR
compliment_writer IS NULL OR
compliment_photos IS NULL




4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars

		min:1		max:5		avg:3.7082


	ii. Table: Business, Column: Stars

		min:1		max:5		avg:3.6549


	iii. Table: Tip, Column: Likes

		min:0		max:2		avg:0.0144


	iv. Table: Checkin, Column: Count

		min:1		max:53		avg:1.9414


	v. Table: User, Column: Review_count

		min:0		max:2000		avg:24.2995



5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
  SELECT city
        , sum(review_count) as reviews
  FROM business
  GROUP by city
  Order by sum(review_count) desc

	Copy and Paste the Result Below:
+-----------------+---------+
| city            | reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montréal        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+



6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
SELECT
city,
stars,
sum(review_count) AS distribution
FROM business
WHERE city = 'Avon'
GROUP by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+------+-------+--------------+
| city | stars | distribution |
+------+-------+--------------+
| Avon |   1.5 |           10 |
| Avon |   2.5 |            6 |
| Avon |   3.5 |           88 |
| Avon |   4.0 |           21 |
| Avon |   4.5 |           31 |
| Avon |   5.0 |            3 |
+------+-------+--------------+

ii. Beachwood

SQL code used to arrive at answer:
SELECT
city,
stars,
sum(review_count) AS distribution
FROM business
WHERE city = 'Beachwood'
GROUP by stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-----------+-------+--------------+
| city      | stars | distribution |
+-----------+-------+--------------+
| Beachwood |   2.0 |            8 |
| Beachwood |   2.5 |            3 |
| Beachwood |   3.0 |           11 |
| Beachwood |   3.5 |            6 |
| Beachwood |   4.0 |           69 |
| Beachwood |   4.5 |           17 |
| Beachwood |   5.0 |           23 |
+-----------+-------+--------------+


7. Find the top 3 users based on their total number of reviews:

	SQL code used to arrive at answer:
  SELECT
  id,
  name,
  sum(review_count) AS total_reviews
  FROM user
  GROUP by id
  ORDER by total_reviews desc

	Copy and Paste the Result Below:

  +------------------------+-----------+---------------+
  | id                     | name      | total_reviews |
  +------------------------+-----------+---------------+
  | -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |          2000 |
  | -3s52C4zL_DHRK0ULG6qtg | Sara      |          1629 |
  | -8lbUNlXVSoXqaRRiHiSNg | Yuri      |          1339 |
  +------------------------+-----------+---------------+

8. Does posing more reviews correlate with more fans?
Yes

	Please explain your findings and interpretation of the results:
  SELECT
    id,
    name,
    sum(review_count) AS total_reviews,
    DATE('now') - yelping_since AS no_of_yrs,
    fans
    FROM user
    GROUP by id
    ORDER by  desc

+------------------------+-----------+---------------+-----------+------+
| id                     | name      | total_reviews | no_of_yrs | fans |
+------------------------+-----------+---------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |           609 |        15 |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |           968 |        11 |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |          1153 |        10 |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |          2000 |        10 |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |           930 |        13 |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |           813 |        13 |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |           377 |        13 |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |          1215 |         7 |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |           862 |        10 |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |           834 |        15 |  120 |
| -B-QEUESGWHPE_889WJaeg | Mark      |           861 |        13 |  115 |
| -DmqnhW4Omr3YhmnigaqHg | Tiffany   |           408 |        14 |  111 |
| -cv9PPT7IHux7XUc9dOpkg | bernice   |           255 |        15 |  105 |
| -DFCC64NXgqrxlO8aLU5rg | Roanna    |          1039 |        16 |  104 |
| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |           694 |        12 |  101 |
| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |          1246 |        16 |  101 |
| -4viTt9UC44lWCFJwleMNQ | Ben       |           307 |        15 |   96 |
| -3i9bhfvrM3F1wsC9XIB8g | Linda     |           584 |        17 |   89 |
| -kLVfaJytOJY2-QdQoCcNQ | Christina |           842 |        10 |   85 |
| -ePh4Prox7ZXnEBNGKyUEA | Jessica   |           220 |        13 |   84 |
| -4BEUkLvHQntN6qPfKJP2w | Greg      |           408 |        14 |   81 |
| -C-l8EHSLXtZZVfUAUhsPA | Nieves    |           178 |         9 |   80 |
| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |           754 |        13 |   78 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |          1339 |        14 |   76 |
| -0zEEaDFIjABtPQni0XlHA | Nicole    |           161 |        13 |   73 |
+------------------------+-----------+---------------+-----------+------+


9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
Yes there are more words with the word "love" than "hate"

	SQL code used to arrive at answer:
1.
SELECT
  count(text) AS comment_hate
FROM review
WHERE text LIKE "%hate%"

+--------------+
| comment_hate |
+--------------+
|          232 |
+--------------+

2.
SELECT
    count(text) AS comment_love
FROM review
WHERE text LIKE "%love%"

+--------------+
| comment_love |
+--------------+
|         1780 |
+--------------+


10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
  SELECT
  id,
  name,
  sum(fans)
  FROM user
  GROUP by id
  ORDER by fans desc LIMIT 10

	Copy and Paste the Result Below:
  +------------------------+-----------+-----------+
  | id                     | name      | sum(fans) |
  +------------------------+-----------+-----------+
  | -9I98YbNQnLdAmcYfb324Q | Amy       |       503 |
  | -8EnCioUmDygAbsYZmTeRQ | Mimi      |       497 |
  | --2vR0DIsmQ6WfcSzKWigw | Harald    |       311 |
  | -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |       253 |
  | -0IiMAZI2SsQ7VmyzJjokQ | Christine |       173 |
  | -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |       159 |
  | -9bbDysuiWeo2VShFJJtcw | Cat       |       133 |
  | -FZBTkAZEXoP7CYvRV2ZwQ | William   |       126 |
  | -9da1xk7zgnnfO1uTVYGkA | Fran      |       124 |
  | -lh59ko3dxChBSZ9U7LfUw | Lissa     |       120 |
  +------------------------+-----------+-----------+



Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.



i. Do the two groups you chose to analyze have a different distribution of hours?
Lower rated group works longer hours

ii. Do the two groups you chose to analyze have a different number of reviews?
Lower rated group has more reviews than higher rated group


iii. Are you able to infer anything from the location data provided between these two groups? Explain.
No every business is in a different zip code

SQL code used for analysis:
SELECT id, city, stars, name, h.hours, review_count, postal_code,
CASE
    WHEN stars BETWEEN 2 AND 3 THEN '2-3'
    WHEN stars BETWEEN 3 AND 4 THEN '3-4'
    WHEN stars BETWEEN 4 AND 5 THEN '4-5'
    ELSE '1-2'
END ClassType
FROM business b
INNER JOIN hours h ON h.business_id = b.id
WHERE city = 'Las Vegas' AND (ClassType = 'Class 1' OR ClassType = 'Class 3')



2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.

i. Difference 1:
More reviews for open businesses
+------------------------+---------------+---------+-------------------+
| id                     |    AVG(stars) | is_open | avg(review_count) |
+------------------------+---------------+---------+-------------------+
| 38k_heLKR2J5P7JKV2AonQ | 3.52039473684 |       0 |     23.1980263158 |
| 38tScZkvRLoa5h-wNPyjkw | 3.67900943396 |       1 |     31.7570754717 |
+------------------------+---------------+---------+-------------------+

ii. Difference 2:
Higher rating for open businesses
+------------------------+---------------+---------+-------------------+
| id                     |    AVG(stars) | is_open | avg(review_count) |
+------------------------+---------------+---------+-------------------+
| 38k_heLKR2J5P7JKV2AonQ | 3.52039473684 |       0 |     23.1980263158 |
| 38tScZkvRLoa5h-wNPyjkw | 3.67900943396 |       1 |     31.7570754717 |
+------------------------+---------------+---------+-------------------+



SQL code used for analysis:
SELECT
id,
AVG(stars),
is_open,
avg(review_count)
FROM business
GROUP by is_open



3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:

i. Indicate the type of analysis you chose to do:
Predicting overall star rating for a business.


ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:


iii. Output of your finished dataset:

(Output limit exceeded, 25 of 70 total rows shown)


iv. Provide the SQL code you used to create your final dataset:
